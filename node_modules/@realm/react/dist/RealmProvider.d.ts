import React from "react";
import Realm from "realm";
type PartialRealmConfiguration = Omit<Partial<Realm.Configuration>, "sync"> & {
    sync?: Partial<Realm.SyncConfiguration>;
};
type ProviderProps = PartialRealmConfiguration & {
    /**
     * The fallback component to render if the Realm is not opened.
     */
    fallback?: React.ComponentType<unknown> | React.ReactElement | null | undefined;
    /**
     * If false, Realm will not be closed when the component unmounts.
     * @default true
     */
    closeOnUnmount?: boolean;
    /**
     * A ref to the Realm instance. This is useful if you need to access the Realm
     * instance outside of a component that uses the Realm hooks.
     */
    realmRef?: React.MutableRefObject<Realm | null>;
    children: React.ReactNode;
};
/**
 * Generates a `RealmProvider` given a {@link Realm.Configuration} and {@link React.Context}.
 * @param realmConfig - The configuration of the Realm to be instantiated
 * @param RealmContext - The context that will contain the Realm instance
 * @returns a RealmProvider component that provides context to all context hooks
 */
export declare function createRealmProvider(realmConfig: Realm.Configuration, RealmContext: React.Context<Realm | null>): React.FC<ProviderProps>;
/**
 * Merge two configurations, creating a configuration using `configA` as the default,
 * merged with `configB`, with properties in `configB` overriding `configA`.
 * @param configA - The default config object
 * @param configB - Config overrides object
 * @returns Merged config object
 */
export declare function mergeRealmConfiguration(configA: PartialRealmConfiguration, configB: PartialRealmConfiguration): Realm.Configuration;
/**
 * Utility function that does a deep comparison (key: value) of object a with object b
 * @param a - Object to compare
 * @param b - Object to compare
 * @returns True if the objects are identical
 */
export declare function areConfigurationsIdentical(a: Realm.Configuration, b: Realm.Configuration): boolean;
export {};
//# sourceMappingURL=RealmProvider.d.ts.map